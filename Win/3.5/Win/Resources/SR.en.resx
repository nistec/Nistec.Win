<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IlegalChar" xml:space="preserve">
    <value>Ilegal character.</value>
  </data>
  <data name="RequiredField" xml:space="preserve">
    <value>Field is required.</value>
  </data>
  <data name="IndexOutBounds" xml:space="preserve">
    <value>The requested index is out of the reach.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="Abort" xml:space="preserve">
    <value>Abort</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Ignore" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="ErrorNotExpected" xml:space="preserve">
    <value>An unexpected error occured. Report the following message to your support department: {0}</value>
  </data>
  <data name="LargerIndexThanZero" xml:space="preserve">
    <value>Index should be greater than zero.</value>
  </data>
  <data name="NullArgument" xml:space="preserve">
    <value>Argument is null or it is empty.</value>
  </data>
  <data name="KeyNotConfigured" xml:space="preserve">
    <value>Cryptographic key is not configured.</value>
  </data>
  <data name="SizeOfKeyInvalidates" xml:space="preserve">
    <value>Cryptographic key should be at least {0} characters.</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>Unable to find file {0} </value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="MistakeConfigRemoting" xml:space="preserve">
    <value>An unexpected error occured during loading of a component of the application. The most likely cause is a configuration flaw. Please, contact enter in contact your technical support department and provide report the following message: "{0}"</value>
  </data>
  <data name="ErrorConvertToNumber" xml:space="preserve">
    <value>Error occured when trying Convert To Number</value>
  </data>
  <data name="ErrorConvertToDate/Time" xml:space="preserve">
    <value>Error occured when trying Convert To Date/Time</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="ErrorDataType" xml:space="preserve">
    <value>Incorrect Data type</value>
  </data>
  <data name="ErrorValidating" xml:space="preserve">
    <value>Error occured when trying to validating </value>
  </data>
  <data name="ErrorIncorrectFormat" xml:space="preserve">
    <value>Incorrect Format</value>
  </data>
  <data name="OnlyDigitsBarAccepted" xml:space="preserve">
    <value>Only digits and date separators are allowed.</value>
  </data>
  <data name="OnlyDigitsPointsAccepted" xml:space="preserve">
    <value>Only digits and decimal points are allowed.</value>
  </data>
  <data name="OnlyDigitsMinusSpaceAccepted" xml:space="preserve">
    <value>Only digits, minus and spaces are allowed.</value>
  </data>
  <data name="OnlyDigitsMinusParenthesesAccepted" xml:space="preserve">
    <value>Only digits, minus, parentheses and spaces are allowed.</value>
  </data>
  <data name="OnlyDigitsMinusPointsAccepted" xml:space="preserve">
    <value>Only digits, minus and decimal points are allowed.</value>
  </data>
  <data name="OnlyDigitsMinusAccepted" xml:space="preserve">
    <value>Only digits and minus are allowed.</value>
  </data>
  <data name="OnlyDigitsMinusPointsBarsAccepted" xml:space="preserve">
    <value>Only digits, decimal points, minus and bars are allowed.</value>
  </data>
  <data name="OnlyDigitsTwoPointsAccepted" xml:space="preserve">
    <value>Only digits and two points are allowed.</value>
  </data>
  <data name="OnlyDigitsPointsBarsAccepted" xml:space="preserve">
    <value>Only digits, decimal points and date separators are accepted.</value>
  </data>
  <data name="OnlyDigitsMinusBarsAccepted" xml:space="preserve">
    <value>Only digits, minus and date separators are accepted.</value>
  </data>
  <data name="InvalidDateFormat" xml:space="preserve">
    <value>Invalid date format; {0}</value>
  </data>
  <data name="InvalidDate" xml:space="preserve">
    <value>Invalid date.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid e-mail.</value>
  </data>
  <data name="InvalidIp" xml:space="preserve">
    <value>Invalid IP number.</value>
  </data>
  <data name="InvalidTelephoneFormat" xml:space="preserve">
    <value>Invalid telephone format.</value>
  </data>
  <data name="InvalidTelephoneAreaFormat" xml:space="preserve">
    <value>Invalid telephone format</value>
  </data>
  <data name="InvalidZipFormat" xml:space="preserve">
    <value>Invalid  zip format; 00000-000.</value>
  </data>
  <data name="InvalidTimeFormat" xml:space="preserve">
    <value>Invalid time format; {0}</value>
  </data>
  <data name="InvalidTime" xml:space="preserve">
    <value>Invalid time.</value>
  </data>
  <data name="InvalidNumber" xml:space="preserve">
    <value>Invalid number.</value>
  </data>
  <data name="OnlyDigitsAccepted" xml:space="preserve">
    <value>Only digits are accepted.</value>
  </data>
  <data name="InvalidZip" xml:space="preserve">
    <value>Invalid  zip number.</value>
  </data>
  <data name="InvalidAreaCode" xml:space="preserve">
    <value>Invalid area code.</value>
  </data>
  <data name="ContentNotExistInList" xml:space="preserve">
    <value>Required entry in the field is not in the list.</value>
  </data>
  <data name="InaccessibleNode" xml:space="preserve">
    <value>It was not possible to read the next expected node.</value>
  </data>
  <data name="IncorrectNodeName" xml:space="preserve">
    <value>Name of incorrect node was found.</value>
  </data>
  <data name="FinalElementNotFound" xml:space="preserve">
    <value>Expected 'EndElement' but not found.</value>
  </data>
  <data name="ShowAll" xml:space="preserve">
    <value>Show all</value>
  </data>
  <data name="HideAll" xml:space="preserve">
    <value>Hide all</value>
  </data>
  <data name="ElementNotFound" xml:space="preserve">
    <value>Element '{0}' not found.</value>
  </data>
  <data name="NodeNotFound" xml:space="preserve">
    <value>Node '{0}' expected but not found.</value>
  </data>
  <data name="CantInsert" xml:space="preserve">
    <value>Unable to insert after end of current entries.</value>
  </data>
  <data name="CantRemove" xml:space="preserve">
    <value>Unable to remove after end of current entries.</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>&amp;Close</value>
  </data>
  <data name="Prominent" xml:space="preserve">
    <value>Pro&amp;eminent</value>
  </data>
  <data name="CalculateAgain" xml:space="preserve">
    <value>C&amp;alc again</value>
  </data>
  <data name="PreviousPage" xml:space="preserve">
    <value>&amp;Move for previous page</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>Move for next &amp;page</value>
  </data>
  <data name="NewPageVertical" xml:space="preserve">
    <value>New &amp;vertical page</value>
  </data>
  <data name="NewPageHorizontal" xml:space="preserve">
    <value>New &amp;horizontal page</value>
  </data>
  <data name="InvalidDirectory" xml:space="preserve">
    <value>Invalid directory</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>&amp;Previous</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>&amp;Next</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>&amp;Finish</value>
  </data>
  <data name="StepNotFound" xml:space="preserve">
    <value>Step not found.</value>
  </data>
  <data name="FirstStepCannotBeNull" xml:space="preserve">
    <value>First step cannot be null or to be in white.</value>
  </data>
  <data name="CloseWizard" xml:space="preserve">
    <value>To leave assistant?</value>
  </data>
  <data name="MessageToLeaveAssistant" xml:space="preserve">
    <value>Do you want to leave the assistant now? Your changes won't be stored.</value>
  </data>
  <data name="NoExistTaskPanels" xml:space="preserve">
    <value>There is not any panel of tasks installed in your system</value>
  </data>
  <data name="OutOfRange" xml:space="preserve">
    <value>Value out of range. It must be between; '{0}' and '{1}'.</value>
  </data>
  <data name="InvalidRegx" xml:space="preserve">
    <value>Invalid regular expression</value>
  </data>
  <data name="ValueNotMatchMask" xml:space="preserve">
    <value>ValueNotMatchMask {0}</value>
  </data>
  <data name="CorrectThisValue" xml:space="preserve">
    <value>Correct This Value ?</value>
  </data>
  <data name="IncorrectValueIntoColumn" xml:space="preserve">
    <value>Incorrect Value In Column {0}</value>
  </data>
</root>